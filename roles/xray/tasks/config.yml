---

- name: config | server tuning
  block:

    - name: config | kernel parameters
      become: true
      ansible.posix.sysctl:
        name: '{{ item.key }}'
        value: '{{ item.value }}'
        state: present
      loop: '{{ xray_tuning_config | dict2items }}'
      loop_control:
        label: '{{ item.key }} is set to {{ item.value }}'
      when:
        - xray_tuning_config.enabled
        - item.key != 'enabled'
        - item.key != 'system_limits'

    - name: config | nofile limits
      become: true
      community.general.pam_limits:
        domain: '{{ item.0.domain }}'
        limit_type: '{{ item.1.type }}'
        limit_item: '{{ item.0.limit }}'
        value: '{{ item.1.value }}'
      loop: >-
        {{ xray_tuning_config.system_limits |
        subelements('types', skip_missing=true) }}
      loop_control:
        label: '{{ item.0.domain }} {{ item.1.type }} {{ item.0.limit }} {{ item.1.value }}'
      when:
        - xray_tuning_config.enabled

- name: config | block regex list
  ansible.builtin.set_fact:
    block_domain_regex: >-
      {{ ['regex:'] |
      product(lookup('file', 'block_regex.list').splitlines()) |
      map('join') |
      list }}

- name: config | server secrets
  block:

    - name: config | generate server secrets
      ansible.builtin.include_tasks:
        file: server.yml
      when: >-
        not xray_server_keys_exists
        or xray_force_update_secrets

    - name: config | add server keys to config
      ansible.builtin.set_fact:
        xray_service_config: >-
          {{ xray_service_config |
          combine({'private_key': xray_private_key},
          {'public_key': xray_public_key}) }}

- name: config | generate clients secrets
  block:

    - name: config | generate clients
      ansible.builtin.include_tasks:
        file: client.yml
      loop: '{{ xray_new_clients | default([]) }}'
      loop_control:
        index_var: xray_client

    - name: config | set xray_all_clients fact
      ansible.builtin.set_fact:
        xray_all_clients: >-
          {{ (xray_active_clients | default([]) |
          difference(xray_inactive_clients | default([]))) +
          xray_add_clients | default([]) | sort(attribute='name') }}

- name: config | create server configuration
  become: true
  ansible.builtin.template:
    src: server.j2
    dest: '{{ xray_docker_config.path }}/config.json'
    mode: '0644'
    lstrip_blocks: true
  notify:
    - xray | restart container

- name: config | create client configuration
  delegate_to: localhost
  ansible.builtin.template:
    src: client.j2
    dest: '{{ xray_clients_config.path }}/{{ item.name }}.json'
    mode: '0644'
    lstrip_blocks: true
  loop: '{{ xray_all_clients }}'
  loop_control:
    label: '{{ item.name }}'

- name: config | create geofiles
  ansible.builtin.include_tasks:
    file: geofile.yml
  loop: '{{ xray_geofiles }}'
  loop_control:
    loop_var: geofile
