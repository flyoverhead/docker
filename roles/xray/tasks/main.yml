---
# Tune kernel parameters for shadowsocks optimization
- name: Tune kernel parameters
  become: true
  when: xray_server_socks_tuning
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: "present"
  loop: "{{ xray_server_socks_tuning_config | dict2items }}"
  loop_control:
    label: "{{ item.key }} is set to {{ item.value }}"

# Modify system nofile limits
- name: Modify system nofile limits
  become: true
  when: xray_server_socks_tuning
  community.general.pam_limits:
    domain: "{{ item.0.domain }}"
    limit_type: "{{ item.1.type }}"
    limit_item: "{{ item.0.limit }}"
    value: "{{ item.1.value }}"
  loop: "{{ xray_system_limits | d([]) | subelements('types', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.domain }} {{ item.1.type }} {{ item.0.limit }} {{ item.1.value }}"

# Check current xray service if exists
- name: Check xray container
  community.docker.docker_container_info:
    name: "{{ xray_name }}"
  register: xray_service
  changed_when: >
    not xray_service.exists or
    xray_tag not in xray_service.container.Config.Image
  failed_when: xray_service.exists and xray_service.container.State.ExitCode != 0
  notify:
    - Start xray service

# Initialize xray service
- name: Initialize xray service
  ansible.builtin.include_tasks: initialize.yml

# Configure xray service
- name: Configure xray service
  ansible.builtin.include_tasks: configure.yml

# Deploy xray service
- name: Deploy xray service
  ansible.builtin.meta: flush_handlers
