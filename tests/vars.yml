---
# Services root path
service_root_path: "/opt/docker_services"

# Docker users
docker_users: ["vagrant"]
docker_restart_policy: "always"
docker_network_mode: "host"

# Default timezone
timezone: "Europe/Moscow"

# Alertmanager configuration
alertmanager_tag: "v0.26.0"
alertmanager_port: "9093"
alertmanager_receivers_config:
  - name: "telegram"
    telegram_configs:
      - send_resolved: true
        api_url: "https://api.telegram.org"
        bot_token: "{{ telegram_bot_roken }}"
        chat_id: -1003572400605
        message: '{% raw %}{{ template "telegram.custom.message" . }}{% endraw %}'
        parse_mode: "Markdown"
telegram_bot_roken: 1667542112:XXQopDar6-M25jirDfL9SSaHJJ30UjtkZiD0

# Dnscrypt proxy configuration
dnscrypt_tag: "2.1.5"
dnscrypt_listening_port: "5353"
dnscrypt_public_resolvers:
  [
    "ahadns-doh-nl",
    "ams-ads-doh-nl",
    "ams-dnscrypt-nl",
    "ams-doh-nl",
    "cs-nl",
    "cs-nl2",
    "dct-nl1",
    "meganerd",
    "meganerd-doh-ipv4",
    "scaleway-ams",
  ]

# Drone CI configuration
drone_tag: "2.20.0"
drone_server_port: "8000"
drone_rpc_secret: "c8df9027745212b3b19416cc2247d9ce"
drone_admin_username: "drone"
drone_admin_token: "f553387083d88b9c3858be041cd31929"

# Drone runner configuration
drone_runner_tag: "1.8.3"
drone_runner_port: "8010"
drone_runner_username: "drone"
drone_runner_password: "drone"

# Gitea configuration
gitea_tag: "1.20.3"
gitea_web_port: "8020"
gitea_admin_username: "gitea"
gitea_admin_password: "gitea"
gitea_admin_email: "gitea@gmail.com"

# Grafana configuration
grafana_tag: "10.1.1"
grafana_port: "8030"
grafana_admin_username: "grafana"
grafana_admin_password: "grafana"

# Nextcloud configuration
nextcloud_tag: "25.0.9-apache"
nextcloud_web_port: "8050"
nextcloud_trusted_domains: ["{{ ansible_host }}"]
nextcloud_admin_username: "nextcloud"
nextcloud_admin_password: "nextcloud"

# Node exporter configuration
node_exporter_tag: "v1.6.1"
node_exporter_port: "9100"
node_exporter_command:
  [
    "--path.procfs=/host/proc",
    "--path.rootfs=/rootfs",
    "--path.sysfs=/host/sys",
    "--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+)($$|/)",
  ]

# PiHole configuration
pihole_tag: "2023.05.2"
pihole_web_password: "pihole"
pihole_web_port: "8060"
pihole_dns_port: "53"

# PostgreSQL configuration
postgres_tag: "15.4-alpine"
postgres_username: "postgres"
postgres_password: "postgres"
postgres_database: "postgres"
postgres_initial_databases: ["drone", "gitea", "nextcloud"]

# Prometheus configuration
prometheus_tag: "v2.46.0"
prometheus_port: "9090"
prometheus_global_config:
  scrape_interval: "15s"
  scrape_timeout: "10s"
  evaluation_interval: "15s"
prometheus_scrape_jobs:
  - job_name: "alertmanager"
    scrape_interval: "1m"
    static_configs:
      - targets: ["{{ ansible_host }}:{{ alertmanager_port }}"]
        labels: { "instance": "{{ ansible_hostname }}" }
  - job_name: "node-exporter"
    scrape_interval: "1m"
    static_configs:
      - targets: ["{{ ansible_host }}:{{ node_exporter_port }}"]
        labels: { "instance": "{{ ansible_hostname }}" }
  - job_name: "prometheus"
    scrape_interval: "1m"
    static_configs:
      - targets: ["{{ ansible_host }}:{{ prometheus_port }}"]
        labels: { "instance": "{{ ansible_hostname }}" }
prometheus_alert_jobs:
  - static_configs:
      - targets: ["{{ ansible_host }}:{{ alertmanager_port }}"]

# Torrserver configuration
torrserver_tag: "latest"
torrserver_port: "8070"

# Wireguard configuration
wireguard_name: "wireguard"
wireguard_image: "linuxserver/wireguard"
wireguard_tag: "v1.0.20210914-ls3"
wireguard_server_address: "192.168.1.1"
wireguard_server_port: "51820"
wireguard_internal_subnet: "10.13.13.0"
wireguard_allowed_ips: ["0.0.0.0/0"]
wireguard_peers: ["client01", "client02", "test01"]
wireguard_post_up: >-
  iptables -t nat -A POSTROUTING -o wg+ -j MASQUERADE
wireguard_post_down: >-
  iptables -t nat -D POSTROUTING -o wg+ -j MASQUERADE

# XRay VPN configuration
xray_image: "teddysun/xray"
xray_tag: "1.8.4"
xray_listening_address: "0.0.0.0"
xray_listening_port: "443"
xray_config: "vless_xtls_utls_reality"
xray_server_public_address: "{{ ansible_host }}"
xray_server_vless_flow: "xtls-rprx-vision"
xray_clients_list: ["client01", "client02", "test01"]
